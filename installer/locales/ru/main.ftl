installer-title = Установщик Amnezia Portmaster
label-host-ip = Хост/IP
label-ssh-port = SSH Порт
label-user = Пользователь
label-user-password = Пароль пользователя
label-private-key-path = Путь к приватному SSH ключу
label-key-password = Пароль от SSH ключа (если есть)
button-pick-key = Выбрать ключ
button-install = Установить
button-fix = Исправить
tooltip-fix-routes = Применить сетевые правила повторно, если они сбросились после рестарта контейнеров или хоста
button-delete = Удалить
tooltip-copy-log = Скопировать лог
label-portmaster-service-port = Порт сервиса Portmaster
label-pool-start = Начало пула
label-pool-end = Конец пула
section-connection-title = Подключение
section-connection-text = Введите данные для подключения к вашему серверу по SSH.
section-auth-title = Авторизация
section-auth-text-1 = Рекомендуется использовать SSH-ключ. Если ключ не выбран, будет использован пароль.
section-auth-text-2 = Убедитесь, что у пользователя есть права root
section-auth-text-3 = Для работы через sudo нужно ввести пароль даже при авторизации по ключу
section-portmaster-title = Portmaster
section-portmaster-text-1 = Настройте порты для работы сервиса и проброса портов.
section-portmaster-text-2 = Порты пробрасываются позже клиентом из указанного диапазона.
section-portmaster-text-3 = Клиенты подключающиеся к разным VPN протоколам используют один и тот же пул портов. 1000 портов обычно хватает.
section-portmaster-text-4 = Portmaster будет жить в отдельном контейнере. Установка не разорвет существующие VPN подключения.
card-connection-params = Параметры подключения
card-key-auth = Авторизация по ключу
card-portmaster-settings = Настройки Portmaster
label-port-range = Диапазон портов для проброса:
log-output-title = Лог выполнения
dialog-pick-key-title = Выберите приватный ключ
snackbar-log-copied = Лог скопирован в буфер обмена!
critical-error-title-text = КРИТИЧЕСКАЯ ОШИБКА!
critical-error-content = Конфигурация REMOTE_PROJECT_DIR = '{ $dangerous_path }' небезопасна.
                         Исправьте константу и перезапустите приложение.
button-understood = Понял
dialog-existing-installation-title = ⚠️ Обнаружена предыдущая установка
dialog-existing-installation-content = На сервере уже запущен контейнер с именем '{ $container_name }'.Продолжить?
                                       Это приведет к остановке и удалению существующего контейнера и связанных с ним правил файрвола.
button-cancel = Отмена
button-yes-delete-continue = Да, удалить и продолжить
dialog-confirm-delete-title = ⚠️ Подтвердите удаление
dialog-confirm-delete-content = Вы уверены, что хотите НАВСЕГДА удалить контейнер '{ $container_name }' и все связанные с ним правила файрвола с сервера?
                                Это действие необратимо.
button-yes-i-am-sure = Да, я уверен, удалить
validation-error-host-port-user = ❌ Ошибка: Заполните поля Хост/IP, Порт и Пользователь.
validation-error-password-key = ❌ Ошибка: Укажите пароль пользователя или выберите SSH ключ.
validation-error-ports-numeric = ❌ Ошибка: Порты и диапазон пула Portmaster должны быть числами.
validation-error-port-too-low = ❌ Ошибка: Порт Portmaster должен быть больше 1080.
validation-error-invalid-range = ❌ Ошибка: Введите корректный диапазон портов
label-language-dropdown = Язык

# Сообщения для лога
log-prefix-success = ✅
log-prefix-warning = ⚠️
log-prefix-error = ❌
log-check-previous-installation = Проверка на наличие предыдущих установок...
log-existing-container-found = ⚠️ Обнаружен существующий контейнер '{ $container_name }'.
log-no-previous-installation = ✅ Предыдущих установок не найдено.
log-cleanup-ufw-rules = Поиск и удаление старых правил UFW...
log-no-ufw-rules-found = ✅ Правил UFW, созданных установщиком, не найдено.
log-rules-to-delete = Обнаружены правила для удаления: { $rules }
log-deleting-ufw-rule = Удаление правила UFW номер { $rule_number }...
log-ufw-rules-cleaned = ✅ Старые правила UFW успешно удалены.
log-ufw-command-not-found = ⚠️ Команда `ufw` не найдена или неактивна. Пропускаем очистку правил.
log-error-cleaning-ufw-rules = ❌ Произошла ошибка при очистке правил UFW: { $error }
log-start-cleanup = Начало очистки предыдущей установки...
log-stopping-removing-container = Остановка и удаление контейнера '{ $container_name }'...
log-failed-to-remove-container = Не удалось удалить контейнер '{ $container_name }' (возможно, его не было).
log-check-port-accessibility = Этап 5: Проверка доступности порта { $port }...
log-attempt-connect = Попытка подключения к { $ip }:{ $port }...
log-port-already-open = ✅ Порт { $port } уже открыт и доступен!
log-port-unavailable = ⚠️ Порт недоступен: { $error }. Приступаем к диагностике файрвола...
error-port-unavailable-ufw-inactive = Порт { $port } недоступен, но UFW неактивен. Возможные проблемы: ошибка в Docker-контейнере, другая сетевая проблема.
error-port-unavailable-ufw-not-found = Порт { $port } недоступен и команда `ufw` не найдена на сервере.
log-ufw-active-adding-rule = UFW активен. Добавляем правило, чтобы разрешить трафик...
log-rule-added-to-ufw = ✅ Правило для порта { $port } добавлено в UFW.
log-recheck-port-accessibility = Повторная проверка доступности порта { $ip }:{ $port }...
log-port-now-open = ✅ Отлично! Порт { $port } теперь открыт и доступен.
error-port-still-unavailable = Порт { $port } был открыт в UFW, но по-прежнему недоступен: { $error }. Проверьте настройки сети и Docker на сервере.
log-checking-sudo-password = Требуются права суперпользователя. Проверяем пароль пользователя для sudo...
log-sudo-password-ok = ✅ Пароль пользователя подходит для sudo. Запоминаем его.
log-sudo-password-failed = ❌ Пароль пользователя не подходит для sudo.
error-sudo-password-invalid = Пароль пользователя не подходит для sudo. Установка прервана.
log-get-amn0-ip = Определение IP-адреса интерфейса amn0...
error-amn0-ip-not-assigned = Интерфейс amn0 найден, но IP-адрес не назначен.
log-amn0-ip-found = ✅ IP-адрес amn0: { $ip }
error-amn0-interface-not-found = Не удалось найти интерфейс amn0. Убедитесь, что AmneziaVPN установлена и запущена.
log-configure-docker-compose = Настройка файла { $path }...
log-docker-compose-configured = ✅ docker-compose.yml успешно настроен.
log-start-uninstallation = --- Начало процесса удаления ---
log-nothing-to-uninstall = Нечего удалять. Установка Portmaster не найдена.
log-uninstallation-completed = ✅ --- Процесс удаления завершен --- ✅
log-uninstallation-successfully-completed = ✅ --- Процесс удаления успешно завершен --- ✅
log-error-during-uninstallation = --- ❌ ОШИБКА ПРИ УДАЛЕНИИ ---
                                     { $error_type }: { $error }
log-installation-canceled-by-user = Установка отменена пользователем.
log-stage-1-server-prep = Этап 1: Подготовка сервера...
log-server-prep-complete = ✅ Сервер успешно подготовлен.
log-stage-2-pm-config = Этап 2: Конфигурация Portmaster...
log-config-complete = ✅ Конфигурация успешно завершена.
log-stage-3-docker-deploy = Этап 3: Развертывание Docker контейнеров...
log-docker-deploy-complete = ✅ Docker контейнеры успешно развернуты.
log-stage-4-apply-net-rules = Этап 4: Применение сетевых правил...
log-net-rules-applied = ✅ Сетевые правила успешно применены.
log-network-accessibility-confirmed = ✅ Сетевая доступность к сервису подтверждена.
log-installation-success = 🎉 --- УСТАНОВКА УСПЕШНО ЗАВЕРШЕНА --- 🎉
log-installation-summary = --- Итоги установки ---
log-pm-available-at = Portmaster доступен по адресу: { $ip }:{ $port }
log-port-range = Диапазон портов для проброса: { $pm_range }
log-separator = -------------------------
log-critical-error = --- ❌ КРИТИЧЕСКАЯ ОШИБКА ---
                         { $error_type }: { $error }
log-os-detected = Обнаружена ОС: { $os_id }
error-os-not-supported = Установка на { $os_id } не поддерживается.
log-clone-repo = Клонирование репозитория...
log-run-setup-script = Запуск скрипта настройки (setup_ubuntu.sh)...
log-run-docker-compose = Запуск docker compose... (Sudo: { $use_sudo })
yes = Да
no = Нет
log-apply-net-rules = Применение сетевых правил... (Sudo: { $use_sudo })
log-start-fix-routes = --- Начало процесса восстановления маршрутов ---
log-routes-fixed = ✅ --- Маршруты успешно восстановлены --- ✅
log-error-during-fix-routes = --- ❌ ОШИБКА ПРИ ВОССТАНОВЛЕНИИ ---
                                  { $error_type }: { $error }
log-connecting-to = Подключение к { $user }@{ $host }:{ $port }...
log-connection-successful = ✅ Подключение успешно установлено!
log-requesting-delete-confirmation = Требуется подтверждение на удаление...
log-delete-operation-canceled = Операция удаления отменена пользователем.
log-stage-pre-install-check-ports = Этап 0: Проверка на конфликты портов...
log-ss-command-error = Ошибка выполнения команды `ss`: { $error }. Утилита не найдена или нет прав.
log-analyzing-network-ports = Анализируем прослушиваемые сетевые порты...
port-conflict-single-port-detail = Порт сервиса Portmaster { $port } занят процессами: { $processes }
port-conflict-range-port-detail = Порт { $port } (из диапазона { $pm_range }) занят процессами: { $processes }
error-ports-occupied-by-other-processes = ❌ Критическая ошибка: Следующие порты, необходимые Portmaster, заняты другими процессами на хосте:
                                            { $conflicts }
                                            Пожалуйста, освободите эти порты или измените настройки Portmaster.
log-all-required-ports-free = ✅ Все необходимые порты свободны.
unknown-process = неизвестный процесс

log-generating-api-key = Генерируем новый API-ключ для Portmaster...
log-saving-client-config = Сохраняем конфигурацию клиента Portmaster локально...
log-creating-local-config-dir = Создаем директорию для конфигурации: { $path }
log-client-config-saved = Конфигурация клиента сохранена в: { $path }
log-error-saving-client-config = Ошибка при сохранении клиентской конфигурации: { $error }

log-waiting-for-container-startup = Ожидаем запуска контейнера { $container_name }. Попыток: { $attempts }, интервал: { $interval } сек.
log-container-is-up = Контейнер { $container_name } запущен и работает.
log-container-not-running = Контейнер { $container_name } еще не запущен. Попытка { $attempt_num } из { $total_attempts }.
log-error-checking-container-status = Ошибка при проверке статуса контейнера { $container_name }: { $error }
log-unexpected-error-checking-container-status = Непредвиденная ошибка при проверке статуса контейнера: { $error }
log-container-startup-timeout = Время ожидания запуска контейнера { $container_name } истекло.
error-container-did-not-start = Контейнер { $container_name } не запустился в отведенное время. Установка прервана.
log-attempting-port-connection-retries = Пытаемся подключиться к порту { $port } с { $attempts } попытками, интервал { $interval } сек.
log-port-unavailable-retry = Порт { $port } недоступен. Попытка { $attempt_num }. Ошибка: { $error }
log-port-unavailable-after-retries = Порт { $port } все еще недоступен после повторных попыток. Проверяем UFW...
log-port-recheck-unavailable-retry = Порт { $port } все еще недоступен после повторной проверки. Попытка { $attempt_num }. Ошибка: { $error }
error-message-port-not-open-after-ufw = Порт не открылся даже после применения правил UFW и повторных проверок.