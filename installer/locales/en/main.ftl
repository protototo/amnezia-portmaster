installer-title = Amnezia Portmaster Installer
label-host-ip = Host/IP
label-ssh-port = SSH Port
label-user = User
label-user-password = User Password
label-private-key-path = Path to Private SSH Key
label-key-password = SSH Key Password (if any)
button-pick-key = Pick Key
button-install = Install
button-fix = Fix
tooltip-fix-routes = Reapply network rules if they were reset after container or host restart
button-delete = Delete
tooltip-copy-log = Copy Log
label-portmaster-service-port = Portmaster Service Port
label-pool-start = Pool Start
label-pool-end = Pool End
section-connection-title = Connection
section-connection-text = Enter SSH connection details for your server.
section-auth-title = Authorization
section-auth-text-1 = SSH key is recommended. If no key is selected, password will be used.
section-auth-text-2 = Make sure the user has root privileges
section-auth-text-3 = For sudo operations, you need to enter the password even with key authentication
section-portmaster-title = Portmaster
section-portmaster-text-1 = Configure ports for the service and port forwarding.
section-portmaster-text-2 = Ports are forwarded later by the client from the specified range.
section-portmaster-text-3 = Clients connecting to different VPN protocols use the same port pool. 1000 ports are usually enough.
section-portmaster-text-4 = Portmaster will run in a separate container. Installation will not disrupt existing VPN connections.
card-connection-params = Connection Parameters
card-key-auth = Key Authorization
card-portmaster-settings = Portmaster Settings
label-port-range = Port forwarding range:
log-output-title = Execution Log
dialog-pick-key-title = Select Private Key
snackbar-log-copied = Log copied to clipboard!
critical-error-title-text = CRITICAL ERROR!
critical-error-content = The REMOTE_PROJECT_DIR configuration = '{ $dangerous_path }' is unsafe.
                         Please fix the constant and restart the application.
button-understood = Understood
dialog-existing-installation-title = ‚ö†Ô∏è Previous Installation Detected
dialog-existing-installation-content = A container named '{ $container_name }' is already running on the server.Continue?
                                       This will stop and remove the existing container and associated firewall rules.
button-cancel = Cancel
button-yes-delete-continue = Yes, Delete and Continue
dialog-confirm-delete-title = ‚ö†Ô∏è Confirm Deletion
dialog-confirm-delete-content = Are you sure you want to PERMANENTLY delete the '{ $container_name }' container and all associated firewall rules from the server?
                                This action is irreversible.
button-yes-i-am-sure = Yes, I am sure, delete
validation-error-host-port-user = ‚ùå Error: Fill in Host/IP, Port, and User fields.
validation-error-password-key = ‚ùå Error: Specify user password or select SSH key.
validation-error-ports-numeric = ‚ùå Error: Portmaster ports and pool range must be numbers.
validation-error-port-too-low = ‚ùå Error: Portmaster port must be greater than 1080.
validation-error-invalid-range = ‚ùå Error: Enter a valid port range.

# Log messages
log-prefix-success = ‚úÖ
log-prefix-warning = ‚ö†Ô∏è
log-prefix-error = ‚ùå
log-check-previous-installation = Checking for previous installations...
log-existing-container-found = ‚ö†Ô∏è Existing container '{ $container_name }' detected.
log-no-previous-installation = ‚úÖ No previous installations found.
log-cleanup-ufw-rules = Searching for and removing old UFW rules...
log-no-ufw-rules-found = ‚úÖ No UFW rules created by the installer found.
log-rules-to-delete = Rules detected for deletion: { $rules }
log-deleting-ufw-rule = Deleting UFW rule number { $rule_number }...
log-ufw-rules-cleaned = ‚úÖ Old UFW rules successfully removed.
log-ufw-command-not-found = ‚ö†Ô∏è `ufw` command not found or inactive. Skipping rule cleanup.
log-error-cleaning-ufw-rules = ‚ùå An error occurred while cleaning UFW rules: { $error }
log-start-cleanup = Starting previous installation cleanup...
log-stopping-removing-container = Stopping and removing container '{ $container_name }'...
log-failed-to-remove-container = Failed to remove container '{ $container_name }' (possibly not present).
log-check-port-accessibility = Stage 5: Checking port { $port } accessibility...
log-attempt-connect = Attempting to connect to { $ip }:{ $port }...
log-port-already-open = ‚úÖ Port { $port } is already open and accessible!
log-port-unavailable = ‚ö†Ô∏è Port unavailable: { $error }. Proceeding with firewall diagnosis...
error-port-unavailable-ufw-inactive = Port { $port } is unavailable, but UFW is inactive. Possible issues: Docker container error, other network problem.
error-port-unavailable-ufw-not-found = Port { $port } is unavailable and `ufw` command not found on server.
log-ufw-active-adding-rule = UFW is active. Adding rule to allow traffic...
log-rule-added-to-ufw = ‚úÖ Rule for port { $port } added to UFW.
log-recheck-port-accessibility = Re-checking port { $ip }:{ $port } accessibility...
log-port-now-open = ‚úÖ Great! Port { $port } is now open and accessible.
error-port-still-unavailable = Port { $port } was opened in UFW, but is still unavailable: { $error }. Check network and Docker settings on the server.
log-checking-sudo-password = Superuser rights required. Checking user password for sudo...
log-sudo-password-ok = ‚úÖ User password is valid for sudo. Remembering it.
log-sudo-password-failed = ‚ùå User password is not valid for sudo.
error-sudo-password-invalid = User password is not valid for sudo. Installation aborted.
log-get-amn0-ip = Determining IP address of amn0 interface...
error-amn0-ip-not-assigned = Amn0 interface found, but IP address is not assigned.
log-amn0-ip-found = ‚úÖ Amn0 IP address: { $ip }
error-amn0-interface-not-found = Failed to find amn0 interface. Ensure AmneziaVPN is installed and running.
log-configure-docker-compose = Configuring file { $path }...
log-docker-compose-configured = ‚úÖ docker-compose.yml successfully configured.
log-start-uninstallation = --- Starting uninstallation process ---
log-nothing-to-uninstall = Nothing to uninstall. Portmaster installation not found.
log-uninstallation-completed = ‚úÖ --- Uninstallation process completed --- ‚úÖ
log-uninstallation-successfully-completed = ‚úÖ --- Uninstallation process successfully completed --- ‚úÖ
log-error-during-uninstallation = --- ‚ùå UNINSTALLATION ERROR ---
                                     { $error_type }: { $error }
log-installation-canceled-by-user = Installation cancelled by user.
log-stage-1-server-prep = Stage 1: Server preparation...
log-server-prep-complete = ‚úÖ Server successfully prepared.
log-stage-2-pm-config = Stage 2: Portmaster configuration...
log-config-complete = ‚úÖ Configuration successfully completed.
log-stage-3-docker-deploy = Stage 3: Deploying Docker containers...
log-docker-deploy-complete = ‚úÖ Docker containers successfully deployed.
log-stage-4-apply-net-rules = Stage 4: Applying network rules...
log-net-rules-applied = ‚úÖ Network rules successfully applied.
log-network-accessibility-confirmed = ‚úÖ Network accessibility to service confirmed.
log-installation-success = üéâ --- INSTALLATION SUCCESSFULLY COMPLETED --- üéâ
log-installation-summary = --- Installation Summary ---
log-pm-available-at = Portmaster is available at: { $ip }:{ $port }
log-port-range = Port forwarding range: { $pm_range }
log-separator = -------------------------
log-critical-error = --- ‚ùå CRITICAL ERROR ---
                         { $error_type }: { $error }
log-os-detected = OS detected: { $os_id }
error-os-not-supported = Installation on { $os_id } is not supported.
log-clone-repo = Cloning repository...
log-run-setup-script = Running setup script (setup_ubuntu.sh)...
log-run-docker-compose = Running docker compose... (Sudo: { $use_sudo })
yes = Yes
no = No
log-apply-net-rules = Applying network rules... (Sudo: { $use_sudo })
log-start-fix-routes = --- Starting route recovery process ---
log-routes-fixed = ‚úÖ --- Routes successfully recovered --- ‚úÖ
log-error-during-fix-routes = --- ‚ùå ERROR DURING RECOVERY ---
                                    { $error_type }: { $error }
log-connecting-to = Connecting to { $user }@{ $host }:{ $port }...
log-connection-successful = ‚úÖ Connection successfully established!
log-requesting-delete-confirmation = Requesting deletion confirmation...
log-delete-operation-canceled = Delete operation cancelled by user.